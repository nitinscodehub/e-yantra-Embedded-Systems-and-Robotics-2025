
7_Servo_Motor_Control_using_PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000005d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000057c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000600  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f48  00000000  00000000  000006b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c5b  00000000  00000000  000015f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000503  00000000  00000000  00002253  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c4  00000000  00000000  00002758  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000675  00000000  00000000  0000281c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000300  00000000  00000000  00002e91  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00003191  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	87 d0       	rcall	.+270    	; 0x204 <main>
  f6:	40 c2       	rjmp	.+1152   	; 0x578 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <servo1_pin_config>:
/**
 * @brief      Function to configure servo 1 pin
 */
void servo1_pin_config (void)
{
 	servo_ddr_reg  |= (1 << servo_1_pin);  		//making Servo 1 pin output
  fa:	25 9a       	sbi	0x04, 5	; 4
 	servo_port_reg |= (1 << servo_1_pin); 		//setting servo 1 pin to logic 1
  fc:	2d 9a       	sbi	0x05, 5	; 5
  fe:	08 95       	ret

00000100 <servo2_pin_config>:
/**
 * @brief      Function to configure servo 2 pin
 */
void servo2_pin_config (void)
{
 	servo_ddr_reg  |= (1 << servo_2_pin);  		//making Servo 2 pin output
 100:	26 9a       	sbi	0x04, 6	; 4
 	servo_port_reg |= (1 << servo_2_pin); 		//setting servo 2 pin to logic 1
 102:	2e 9a       	sbi	0x05, 6	; 5
 104:	08 95       	ret

00000106 <servo3_pin_config>:
/**
 * @brief      Function to configure servo 3 pin
 */
void servo3_pin_config (void)
{
 	servo_ddr_reg  |= (1 << servo_3_pin);  		//making Servo 3 pin output
 106:	27 9a       	sbi	0x04, 7	; 4
 	servo_port_reg |= (1 << servo_3_pin); 		//setting servo 3 pin to logic 1
 108:	2f 9a       	sbi	0x05, 7	; 5
 10a:	08 95       	ret

0000010c <timer1_init>:
/**
 * @brief      Function to configure timer 1 with 10 bit fast pwm (52.25Hz)
 */
void timer1_init(void)
{
 	TCCR1B_reg &= ~(1 << CS2_bit | 1 << CS1_bit | 1 << CS0_bit); 			//stop the timer
 10c:	e1 e8       	ldi	r30, 0x81	; 129
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	88 7f       	andi	r24, 0xF8	; 248
 114:	80 83       	st	Z, r24
 	
	TCNT1H_reg = 0xFC; 			//Counter high value to which OCR1xH value is to be compared with
 116:	8c ef       	ldi	r24, 0xFC	; 252
 118:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 	TCNT1L_reg = 0x01;			//Counter low value to which OCR1xH value is to be compared with
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
 	OCR1AH_reg = 0x03;			//Output compare Register high value for servo 1
 122:	93 e0       	ldi	r25, 0x03	; 3
 124:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 	OCR1AL_reg = 0xFF;			//Output Compare Register low Value For servo 1
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 	OCR1BH_reg = 0x03;			//Output compare Register high value for servo 2
 12e:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
 	OCR1BL_reg = 0xFF;			//Output Compare Register low Value For servo 2
 132:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
 	OCR1CH_reg = 0x03;			//Output compare Register high value for servo 3
 136:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
 	OCR1CL_reg = 0xFF;			//Output Compare Register low Value For servo 3
 13a:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>

	//{COM1A1=1, COM1A0=0; COM1B1=1, COM1B0=0; COM1C1=1 COM1C0=0} For Overriding normal port functionality to OCRnA outputs.
	//{WGM11=1, WGM10=1} Along With WGM12 in TCCR1B for Selecting FAST PWM Mode
 	TCCR1A_reg |= (1 << COMA1_bit | 1 << COMB1_bit | 1 << COMC1_bit | 1 << WGM1_bit | 1 << WGM0_bit); 
 13e:	a0 e8       	ldi	r26, 0x80	; 128
 140:	b0 e0       	ldi	r27, 0x00	; 0
 142:	8c 91       	ld	r24, X
 144:	8b 6a       	ori	r24, 0xAB	; 171
 146:	8c 93       	st	X, r24
	TCCR1A_reg &= ~(1 << COMA0_bit | 1 << COMB0_bit | 1 << COMC0_bit);
 148:	8c 91       	ld	r24, X
 14a:	8b 7a       	andi	r24, 0xAB	; 171
 14c:	8c 93       	st	X, r24

	//WGM12=1; CS12=1, CS11=0, CS10=0 (Prescaler=256)
 	TCCR1B_reg |= (1 << WGM2_bit | 1 << CS2_bit); 
 14e:	80 81       	ld	r24, Z
 150:	8c 60       	ori	r24, 0x0C	; 12
 152:	80 83       	st	Z, r24
	TCCR1B_reg &= ~(1 << CS1_bit | CS0_bit);
 154:	80 81       	ld	r24, Z
 156:	8d 7f       	andi	r24, 0xFD	; 253
 158:	80 83       	st	Z, r24
 15a:	08 95       	ret

0000015c <servo_1>:
 */
void servo_1(unsigned char degrees)  
{
 	float PositionPanServo = 0;
  	PositionPanServo = ((float)degrees / 1.86) + 35.0;
 	OCR1AH_reg = 0x00;
 15c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 	OCR1AL_reg = (unsigned char) PositionPanServo;
 160:	68 2f       	mov	r22, r24
 162:	70 e0       	ldi	r23, 0x00	; 0
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	79 d1       	rcall	.+754    	; 0x45c <__floatunsisf>
 16a:	2b e7       	ldi	r18, 0x7B	; 123
 16c:	34 e1       	ldi	r19, 0x14	; 20
 16e:	4e ee       	ldi	r20, 0xEE	; 238
 170:	5f e3       	ldi	r21, 0x3F	; 63
 172:	e0 d0       	rcall	.+448    	; 0x334 <__divsf3>
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	4c e0       	ldi	r20, 0x0C	; 12
 17a:	52 e4       	ldi	r21, 0x42	; 66
 17c:	77 d0       	rcall	.+238    	; 0x26c <__addsf3>
 17e:	42 d1       	rcall	.+644    	; 0x404 <__fixunssfsi>
 180:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 184:	08 95       	ret

00000186 <servo_2>:
 */
void servo_2(unsigned char degrees)  
{
 	float PositionPanServo = 0;
  	PositionPanServo = ((float)degrees / 1.86) + 35.0;
 	OCR1BH_reg = 0x00;
 186:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
 	OCR1BL_reg = (unsigned char) PositionPanServo;
 18a:	68 2f       	mov	r22, r24
 18c:	70 e0       	ldi	r23, 0x00	; 0
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	64 d1       	rcall	.+712    	; 0x45c <__floatunsisf>
 194:	2b e7       	ldi	r18, 0x7B	; 123
 196:	34 e1       	ldi	r19, 0x14	; 20
 198:	4e ee       	ldi	r20, 0xEE	; 238
 19a:	5f e3       	ldi	r21, 0x3F	; 63
 19c:	cb d0       	rcall	.+406    	; 0x334 <__divsf3>
 19e:	20 e0       	ldi	r18, 0x00	; 0
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	4c e0       	ldi	r20, 0x0C	; 12
 1a4:	52 e4       	ldi	r21, 0x42	; 66
 1a6:	62 d0       	rcall	.+196    	; 0x26c <__addsf3>
 1a8:	2d d1       	rcall	.+602    	; 0x404 <__fixunssfsi>
 1aa:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
 1ae:	08 95       	ret

000001b0 <servo_3>:
 */
void servo_3(unsigned char degrees)  
{
 	float PositionPanServo = 0;
  	PositionPanServo = ((float)degrees / 1.86) + 35.0;
 	OCR1CH_reg = 0x00;
 1b0:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
 	OCR1CL_reg = (unsigned char) PositionPanServo;
 1b4:	68 2f       	mov	r22, r24
 1b6:	70 e0       	ldi	r23, 0x00	; 0
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	4f d1       	rcall	.+670    	; 0x45c <__floatunsisf>
 1be:	2b e7       	ldi	r18, 0x7B	; 123
 1c0:	34 e1       	ldi	r19, 0x14	; 20
 1c2:	4e ee       	ldi	r20, 0xEE	; 238
 1c4:	5f e3       	ldi	r21, 0x3F	; 63
 1c6:	b6 d0       	rcall	.+364    	; 0x334 <__divsf3>
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	4c e0       	ldi	r20, 0x0C	; 12
 1ce:	52 e4       	ldi	r21, 0x42	; 66
 1d0:	4d d0       	rcall	.+154    	; 0x26c <__addsf3>
 1d2:	18 d1       	rcall	.+560    	; 0x404 <__fixunssfsi>
 1d4:	60 93 8c 00 	sts	0x008C, r22	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
 1d8:	08 95       	ret

000001da <servo_1_free>:
 * @details    Servo_free functions unlocks the servo motors from the any angle and make them free by giving 100% duty cycle at the PWM. 
 * 			   This function can be used to reduce the power consumption of the motor if it is holding load against the gravity. 
 */
void servo_1_free (void) //makes servo 1 free rotating
{
 	OCR1AH_reg = 0x03; 
 1da:	83 e0       	ldi	r24, 0x03	; 3
 1dc:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 	OCR1AL_reg = 0xFF; 			//Servo 1 off
 1e0:	8f ef       	ldi	r24, 0xFF	; 255
 1e2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 1e6:	08 95       	ret

000001e8 <servo_2_free>:
 * @details    Servo_free functions unlocks the servo motors from the any angle and make them free by giving 100% duty cycle at the PWM. 
 * 			   This function can be used to reduce the power consumption of the motor if it is holding load against the gravity. 
 */
void servo_2_free (void) //makes servo 2 free rotating
{
 	OCR1BH_reg = 0x03; 
 1e8:	83 e0       	ldi	r24, 0x03	; 3
 1ea:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
 	OCR1BL_reg = 0xFF; 			//Servo 2 off
 1ee:	8f ef       	ldi	r24, 0xFF	; 255
 1f0:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
 1f4:	08 95       	ret

000001f6 <servo_3_free>:
 * @details    Servo_free functions unlocks the servo motors from the any angle and make them free by giving 100% duty cycle at the PWM. 
 * 			   This function can be used to reduce the power consumption of the motor if it is holding load against the gravity. 
 */
void servo_3_free (void) //makes servo 3 free rotating
{
 	OCR1CH_reg = 0x03; 
 1f6:	83 e0       	ldi	r24, 0x03	; 3
 1f8:	80 93 8d 00 	sts	0x008D, r24	; 0x80008d <__TEXT_REGION_LENGTH__+0x70008d>
 	OCR1CL_reg = 0xFF; 			//Servo 3 off
 1fc:	8f ef       	ldi	r24, 0xFF	; 255
 1fe:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x70008c>
 202:	08 95       	ret

00000204 <main>:
 * 			   then rotate three servos by 90 degrees.
 */
int main(void)
{
	unsigned char i = 0;
	servo1_pin_config();
 204:	7a df       	rcall	.-268    	; 0xfa <servo1_pin_config>
	servo2_pin_config();
 206:	7c df       	rcall	.-264    	; 0x100 <servo2_pin_config>
	servo3_pin_config();
 208:	7e df       	rcall	.-260    	; 0x106 <servo3_pin_config>
 20a:	80 df       	rcall	.-256    	; 0x10c <timer1_init>
	timer1_init();
 20c:	c0 e0       	ldi	r28, 0x00	; 0
	
	for (i = 0; i <90; i++)
 20e:	8c 2f       	mov	r24, r28
	{
		servo_1(i);
 210:	a5 df       	rcall	.-182    	; 0x15c <servo_1>
 212:	29 e9       	ldi	r18, 0x99	; 153
 214:	89 e5       	ldi	r24, 0x59	; 89
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 216:	91 e0       	ldi	r25, 0x01	; 1
 218:	21 50       	subi	r18, 0x01	; 1
 21a:	80 40       	sbci	r24, 0x00	; 0
 21c:	90 40       	sbci	r25, 0x00	; 0
 21e:	e1 f7       	brne	.-8      	; 0x218 <main+0x14>
 220:	00 00       	nop
 222:	8c 2f       	mov	r24, r28
		_delay_ms(30);
		servo_2(i);
 224:	b0 df       	rcall	.-160    	; 0x186 <servo_2>
 226:	29 e9       	ldi	r18, 0x99	; 153
 228:	89 e5       	ldi	r24, 0x59	; 89
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	21 50       	subi	r18, 0x01	; 1
 22e:	80 40       	sbci	r24, 0x00	; 0
 230:	90 40       	sbci	r25, 0x00	; 0
 232:	e1 f7       	brne	.-8      	; 0x22c <main+0x28>
 234:	00 00       	nop
 236:	8c 2f       	mov	r24, r28
		_delay_ms(30);
		servo_3(i);
 238:	bb df       	rcall	.-138    	; 0x1b0 <servo_3>
 23a:	29 e9       	ldi	r18, 0x99	; 153
 23c:	89 e5       	ldi	r24, 0x59	; 89
 23e:	91 e0       	ldi	r25, 0x01	; 1
 240:	21 50       	subi	r18, 0x01	; 1
 242:	80 40       	sbci	r24, 0x00	; 0
 244:	90 40       	sbci	r25, 0x00	; 0
 246:	e1 f7       	brne	.-8      	; 0x240 <main+0x3c>
 248:	00 00       	nop
 24a:	cf 5f       	subi	r28, 0xFF	; 255
 24c:	ca 35       	cpi	r28, 0x5A	; 90
	servo1_pin_config();
	servo2_pin_config();
	servo3_pin_config();
	timer1_init();
	
	for (i = 0; i <90; i++)
 24e:	f9 f6       	brne	.-66     	; 0x20e <main+0xa>
 250:	2f ef       	ldi	r18, 0xFF	; 255
 252:	8f ef       	ldi	r24, 0xFF	; 255
 254:	99 e5       	ldi	r25, 0x59	; 89
 256:	21 50       	subi	r18, 0x01	; 1
 258:	80 40       	sbci	r24, 0x00	; 0
 25a:	90 40       	sbci	r25, 0x00	; 0
 25c:	e1 f7       	brne	.-8      	; 0x256 <main+0x52>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <main+0x5c>
		_delay_ms(30);
	}

	_delay_ms(2000);
	
	servo_1_free(); 
 260:	00 00       	nop
 262:	bb df       	rcall	.-138    	; 0x1da <servo_1_free>
	servo_2_free();
 264:	c1 df       	rcall	.-126    	; 0x1e8 <servo_2_free>
 266:	c7 df       	rcall	.-114    	; 0x1f6 <servo_3_free>
	servo_3_free();
 268:	ff cf       	rjmp	.-2      	; 0x268 <main+0x64>

0000026a <__subsf3>:
 26a:	50 58       	subi	r21, 0x80	; 128

0000026c <__addsf3>:
 26c:	bb 27       	eor	r27, r27
 26e:	aa 27       	eor	r26, r26
 270:	0e d0       	rcall	.+28     	; 0x28e <__addsf3x>
 272:	48 c1       	rjmp	.+656    	; 0x504 <__fp_round>
 274:	39 d1       	rcall	.+626    	; 0x4e8 <__fp_pscA>
 276:	30 f0       	brcs	.+12     	; 0x284 <__addsf3+0x18>
 278:	3e d1       	rcall	.+636    	; 0x4f6 <__fp_pscB>
 27a:	20 f0       	brcs	.+8      	; 0x284 <__addsf3+0x18>
 27c:	31 f4       	brne	.+12     	; 0x28a <__addsf3+0x1e>
 27e:	9f 3f       	cpi	r25, 0xFF	; 255
 280:	11 f4       	brne	.+4      	; 0x286 <__addsf3+0x1a>
 282:	1e f4       	brtc	.+6      	; 0x28a <__addsf3+0x1e>
 284:	2e c1       	rjmp	.+604    	; 0x4e2 <__fp_nan>
 286:	0e f4       	brtc	.+2      	; 0x28a <__addsf3+0x1e>
 288:	e0 95       	com	r30
 28a:	e7 fb       	bst	r30, 7
 28c:	24 c1       	rjmp	.+584    	; 0x4d6 <__fp_inf>

0000028e <__addsf3x>:
 28e:	e9 2f       	mov	r30, r25
 290:	4a d1       	rcall	.+660    	; 0x526 <__fp_split3>
 292:	80 f3       	brcs	.-32     	; 0x274 <__addsf3+0x8>
 294:	ba 17       	cp	r27, r26
 296:	62 07       	cpc	r22, r18
 298:	73 07       	cpc	r23, r19
 29a:	84 07       	cpc	r24, r20
 29c:	95 07       	cpc	r25, r21
 29e:	18 f0       	brcs	.+6      	; 0x2a6 <__addsf3x+0x18>
 2a0:	71 f4       	brne	.+28     	; 0x2be <__addsf3x+0x30>
 2a2:	9e f5       	brtc	.+102    	; 0x30a <__addsf3x+0x7c>
 2a4:	62 c1       	rjmp	.+708    	; 0x56a <__fp_zero>
 2a6:	0e f4       	brtc	.+2      	; 0x2aa <__addsf3x+0x1c>
 2a8:	e0 95       	com	r30
 2aa:	0b 2e       	mov	r0, r27
 2ac:	ba 2f       	mov	r27, r26
 2ae:	a0 2d       	mov	r26, r0
 2b0:	0b 01       	movw	r0, r22
 2b2:	b9 01       	movw	r22, r18
 2b4:	90 01       	movw	r18, r0
 2b6:	0c 01       	movw	r0, r24
 2b8:	ca 01       	movw	r24, r20
 2ba:	a0 01       	movw	r20, r0
 2bc:	11 24       	eor	r1, r1
 2be:	ff 27       	eor	r31, r31
 2c0:	59 1b       	sub	r21, r25
 2c2:	99 f0       	breq	.+38     	; 0x2ea <__addsf3x+0x5c>
 2c4:	59 3f       	cpi	r21, 0xF9	; 249
 2c6:	50 f4       	brcc	.+20     	; 0x2dc <__addsf3x+0x4e>
 2c8:	50 3e       	cpi	r21, 0xE0	; 224
 2ca:	68 f1       	brcs	.+90     	; 0x326 <__addsf3x+0x98>
 2cc:	1a 16       	cp	r1, r26
 2ce:	f0 40       	sbci	r31, 0x00	; 0
 2d0:	a2 2f       	mov	r26, r18
 2d2:	23 2f       	mov	r18, r19
 2d4:	34 2f       	mov	r19, r20
 2d6:	44 27       	eor	r20, r20
 2d8:	58 5f       	subi	r21, 0xF8	; 248
 2da:	f3 cf       	rjmp	.-26     	; 0x2c2 <__addsf3x+0x34>
 2dc:	46 95       	lsr	r20
 2de:	37 95       	ror	r19
 2e0:	27 95       	ror	r18
 2e2:	a7 95       	ror	r26
 2e4:	f0 40       	sbci	r31, 0x00	; 0
 2e6:	53 95       	inc	r21
 2e8:	c9 f7       	brne	.-14     	; 0x2dc <__addsf3x+0x4e>
 2ea:	7e f4       	brtc	.+30     	; 0x30a <__addsf3x+0x7c>
 2ec:	1f 16       	cp	r1, r31
 2ee:	ba 0b       	sbc	r27, r26
 2f0:	62 0b       	sbc	r22, r18
 2f2:	73 0b       	sbc	r23, r19
 2f4:	84 0b       	sbc	r24, r20
 2f6:	ba f0       	brmi	.+46     	; 0x326 <__addsf3x+0x98>
 2f8:	91 50       	subi	r25, 0x01	; 1
 2fa:	a1 f0       	breq	.+40     	; 0x324 <__addsf3x+0x96>
 2fc:	ff 0f       	add	r31, r31
 2fe:	bb 1f       	adc	r27, r27
 300:	66 1f       	adc	r22, r22
 302:	77 1f       	adc	r23, r23
 304:	88 1f       	adc	r24, r24
 306:	c2 f7       	brpl	.-16     	; 0x2f8 <__addsf3x+0x6a>
 308:	0e c0       	rjmp	.+28     	; 0x326 <__addsf3x+0x98>
 30a:	ba 0f       	add	r27, r26
 30c:	62 1f       	adc	r22, r18
 30e:	73 1f       	adc	r23, r19
 310:	84 1f       	adc	r24, r20
 312:	48 f4       	brcc	.+18     	; 0x326 <__addsf3x+0x98>
 314:	87 95       	ror	r24
 316:	77 95       	ror	r23
 318:	67 95       	ror	r22
 31a:	b7 95       	ror	r27
 31c:	f7 95       	ror	r31
 31e:	9e 3f       	cpi	r25, 0xFE	; 254
 320:	08 f0       	brcs	.+2      	; 0x324 <__addsf3x+0x96>
 322:	b3 cf       	rjmp	.-154    	; 0x28a <__addsf3+0x1e>
 324:	93 95       	inc	r25
 326:	88 0f       	add	r24, r24
 328:	08 f0       	brcs	.+2      	; 0x32c <__addsf3x+0x9e>
 32a:	99 27       	eor	r25, r25
 32c:	ee 0f       	add	r30, r30
 32e:	97 95       	ror	r25
 330:	87 95       	ror	r24
 332:	08 95       	ret

00000334 <__divsf3>:
 334:	0c d0       	rcall	.+24     	; 0x34e <__divsf3x>
 336:	e6 c0       	rjmp	.+460    	; 0x504 <__fp_round>
 338:	de d0       	rcall	.+444    	; 0x4f6 <__fp_pscB>
 33a:	40 f0       	brcs	.+16     	; 0x34c <__divsf3+0x18>
 33c:	d5 d0       	rcall	.+426    	; 0x4e8 <__fp_pscA>
 33e:	30 f0       	brcs	.+12     	; 0x34c <__divsf3+0x18>
 340:	21 f4       	brne	.+8      	; 0x34a <__divsf3+0x16>
 342:	5f 3f       	cpi	r21, 0xFF	; 255
 344:	19 f0       	breq	.+6      	; 0x34c <__divsf3+0x18>
 346:	c7 c0       	rjmp	.+398    	; 0x4d6 <__fp_inf>
 348:	51 11       	cpse	r21, r1
 34a:	10 c1       	rjmp	.+544    	; 0x56c <__fp_szero>
 34c:	ca c0       	rjmp	.+404    	; 0x4e2 <__fp_nan>

0000034e <__divsf3x>:
 34e:	eb d0       	rcall	.+470    	; 0x526 <__fp_split3>
 350:	98 f3       	brcs	.-26     	; 0x338 <__divsf3+0x4>

00000352 <__divsf3_pse>:
 352:	99 23       	and	r25, r25
 354:	c9 f3       	breq	.-14     	; 0x348 <__divsf3+0x14>
 356:	55 23       	and	r21, r21
 358:	b1 f3       	breq	.-20     	; 0x346 <__divsf3+0x12>
 35a:	95 1b       	sub	r25, r21
 35c:	55 0b       	sbc	r21, r21
 35e:	bb 27       	eor	r27, r27
 360:	aa 27       	eor	r26, r26
 362:	62 17       	cp	r22, r18
 364:	73 07       	cpc	r23, r19
 366:	84 07       	cpc	r24, r20
 368:	38 f0       	brcs	.+14     	; 0x378 <__divsf3_pse+0x26>
 36a:	9f 5f       	subi	r25, 0xFF	; 255
 36c:	5f 4f       	sbci	r21, 0xFF	; 255
 36e:	22 0f       	add	r18, r18
 370:	33 1f       	adc	r19, r19
 372:	44 1f       	adc	r20, r20
 374:	aa 1f       	adc	r26, r26
 376:	a9 f3       	breq	.-22     	; 0x362 <__divsf3_pse+0x10>
 378:	33 d0       	rcall	.+102    	; 0x3e0 <__divsf3_pse+0x8e>
 37a:	0e 2e       	mov	r0, r30
 37c:	3a f0       	brmi	.+14     	; 0x38c <__divsf3_pse+0x3a>
 37e:	e0 e8       	ldi	r30, 0x80	; 128
 380:	30 d0       	rcall	.+96     	; 0x3e2 <__divsf3_pse+0x90>
 382:	91 50       	subi	r25, 0x01	; 1
 384:	50 40       	sbci	r21, 0x00	; 0
 386:	e6 95       	lsr	r30
 388:	00 1c       	adc	r0, r0
 38a:	ca f7       	brpl	.-14     	; 0x37e <__divsf3_pse+0x2c>
 38c:	29 d0       	rcall	.+82     	; 0x3e0 <__divsf3_pse+0x8e>
 38e:	fe 2f       	mov	r31, r30
 390:	27 d0       	rcall	.+78     	; 0x3e0 <__divsf3_pse+0x8e>
 392:	66 0f       	add	r22, r22
 394:	77 1f       	adc	r23, r23
 396:	88 1f       	adc	r24, r24
 398:	bb 1f       	adc	r27, r27
 39a:	26 17       	cp	r18, r22
 39c:	37 07       	cpc	r19, r23
 39e:	48 07       	cpc	r20, r24
 3a0:	ab 07       	cpc	r26, r27
 3a2:	b0 e8       	ldi	r27, 0x80	; 128
 3a4:	09 f0       	breq	.+2      	; 0x3a8 <__divsf3_pse+0x56>
 3a6:	bb 0b       	sbc	r27, r27
 3a8:	80 2d       	mov	r24, r0
 3aa:	bf 01       	movw	r22, r30
 3ac:	ff 27       	eor	r31, r31
 3ae:	93 58       	subi	r25, 0x83	; 131
 3b0:	5f 4f       	sbci	r21, 0xFF	; 255
 3b2:	2a f0       	brmi	.+10     	; 0x3be <__divsf3_pse+0x6c>
 3b4:	9e 3f       	cpi	r25, 0xFE	; 254
 3b6:	51 05       	cpc	r21, r1
 3b8:	68 f0       	brcs	.+26     	; 0x3d4 <__divsf3_pse+0x82>
 3ba:	8d c0       	rjmp	.+282    	; 0x4d6 <__fp_inf>
 3bc:	d7 c0       	rjmp	.+430    	; 0x56c <__fp_szero>
 3be:	5f 3f       	cpi	r21, 0xFF	; 255
 3c0:	ec f3       	brlt	.-6      	; 0x3bc <__divsf3_pse+0x6a>
 3c2:	98 3e       	cpi	r25, 0xE8	; 232
 3c4:	dc f3       	brlt	.-10     	; 0x3bc <__divsf3_pse+0x6a>
 3c6:	86 95       	lsr	r24
 3c8:	77 95       	ror	r23
 3ca:	67 95       	ror	r22
 3cc:	b7 95       	ror	r27
 3ce:	f7 95       	ror	r31
 3d0:	9f 5f       	subi	r25, 0xFF	; 255
 3d2:	c9 f7       	brne	.-14     	; 0x3c6 <__divsf3_pse+0x74>
 3d4:	88 0f       	add	r24, r24
 3d6:	91 1d       	adc	r25, r1
 3d8:	96 95       	lsr	r25
 3da:	87 95       	ror	r24
 3dc:	97 f9       	bld	r25, 7
 3de:	08 95       	ret
 3e0:	e1 e0       	ldi	r30, 0x01	; 1
 3e2:	66 0f       	add	r22, r22
 3e4:	77 1f       	adc	r23, r23
 3e6:	88 1f       	adc	r24, r24
 3e8:	bb 1f       	adc	r27, r27
 3ea:	62 17       	cp	r22, r18
 3ec:	73 07       	cpc	r23, r19
 3ee:	84 07       	cpc	r24, r20
 3f0:	ba 07       	cpc	r27, r26
 3f2:	20 f0       	brcs	.+8      	; 0x3fc <__divsf3_pse+0xaa>
 3f4:	62 1b       	sub	r22, r18
 3f6:	73 0b       	sbc	r23, r19
 3f8:	84 0b       	sbc	r24, r20
 3fa:	ba 0b       	sbc	r27, r26
 3fc:	ee 1f       	adc	r30, r30
 3fe:	88 f7       	brcc	.-30     	; 0x3e2 <__divsf3_pse+0x90>
 400:	e0 95       	com	r30
 402:	08 95       	ret

00000404 <__fixunssfsi>:
 404:	98 d0       	rcall	.+304    	; 0x536 <__fp_splitA>
 406:	88 f0       	brcs	.+34     	; 0x42a <__fixunssfsi+0x26>
 408:	9f 57       	subi	r25, 0x7F	; 127
 40a:	90 f0       	brcs	.+36     	; 0x430 <__fixunssfsi+0x2c>
 40c:	b9 2f       	mov	r27, r25
 40e:	99 27       	eor	r25, r25
 410:	b7 51       	subi	r27, 0x17	; 23
 412:	a0 f0       	brcs	.+40     	; 0x43c <__fixunssfsi+0x38>
 414:	d1 f0       	breq	.+52     	; 0x44a <__fixunssfsi+0x46>
 416:	66 0f       	add	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	88 1f       	adc	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	1a f0       	brmi	.+6      	; 0x426 <__fixunssfsi+0x22>
 420:	ba 95       	dec	r27
 422:	c9 f7       	brne	.-14     	; 0x416 <__fixunssfsi+0x12>
 424:	12 c0       	rjmp	.+36     	; 0x44a <__fixunssfsi+0x46>
 426:	b1 30       	cpi	r27, 0x01	; 1
 428:	81 f0       	breq	.+32     	; 0x44a <__fixunssfsi+0x46>
 42a:	9f d0       	rcall	.+318    	; 0x56a <__fp_zero>
 42c:	b1 e0       	ldi	r27, 0x01	; 1
 42e:	08 95       	ret
 430:	9c c0       	rjmp	.+312    	; 0x56a <__fp_zero>
 432:	67 2f       	mov	r22, r23
 434:	78 2f       	mov	r23, r24
 436:	88 27       	eor	r24, r24
 438:	b8 5f       	subi	r27, 0xF8	; 248
 43a:	39 f0       	breq	.+14     	; 0x44a <__fixunssfsi+0x46>
 43c:	b9 3f       	cpi	r27, 0xF9	; 249
 43e:	cc f3       	brlt	.-14     	; 0x432 <__fixunssfsi+0x2e>
 440:	86 95       	lsr	r24
 442:	77 95       	ror	r23
 444:	67 95       	ror	r22
 446:	b3 95       	inc	r27
 448:	d9 f7       	brne	.-10     	; 0x440 <__fixunssfsi+0x3c>
 44a:	3e f4       	brtc	.+14     	; 0x45a <__fixunssfsi+0x56>
 44c:	90 95       	com	r25
 44e:	80 95       	com	r24
 450:	70 95       	com	r23
 452:	61 95       	neg	r22
 454:	7f 4f       	sbci	r23, 0xFF	; 255
 456:	8f 4f       	sbci	r24, 0xFF	; 255
 458:	9f 4f       	sbci	r25, 0xFF	; 255
 45a:	08 95       	ret

0000045c <__floatunsisf>:
 45c:	e8 94       	clt
 45e:	09 c0       	rjmp	.+18     	; 0x472 <__floatsisf+0x12>

00000460 <__floatsisf>:
 460:	97 fb       	bst	r25, 7
 462:	3e f4       	brtc	.+14     	; 0x472 <__floatsisf+0x12>
 464:	90 95       	com	r25
 466:	80 95       	com	r24
 468:	70 95       	com	r23
 46a:	61 95       	neg	r22
 46c:	7f 4f       	sbci	r23, 0xFF	; 255
 46e:	8f 4f       	sbci	r24, 0xFF	; 255
 470:	9f 4f       	sbci	r25, 0xFF	; 255
 472:	99 23       	and	r25, r25
 474:	a9 f0       	breq	.+42     	; 0x4a0 <__floatsisf+0x40>
 476:	f9 2f       	mov	r31, r25
 478:	96 e9       	ldi	r25, 0x96	; 150
 47a:	bb 27       	eor	r27, r27
 47c:	93 95       	inc	r25
 47e:	f6 95       	lsr	r31
 480:	87 95       	ror	r24
 482:	77 95       	ror	r23
 484:	67 95       	ror	r22
 486:	b7 95       	ror	r27
 488:	f1 11       	cpse	r31, r1
 48a:	f8 cf       	rjmp	.-16     	; 0x47c <__floatsisf+0x1c>
 48c:	fa f4       	brpl	.+62     	; 0x4cc <__floatsisf+0x6c>
 48e:	bb 0f       	add	r27, r27
 490:	11 f4       	brne	.+4      	; 0x496 <__floatsisf+0x36>
 492:	60 ff       	sbrs	r22, 0
 494:	1b c0       	rjmp	.+54     	; 0x4cc <__floatsisf+0x6c>
 496:	6f 5f       	subi	r22, 0xFF	; 255
 498:	7f 4f       	sbci	r23, 0xFF	; 255
 49a:	8f 4f       	sbci	r24, 0xFF	; 255
 49c:	9f 4f       	sbci	r25, 0xFF	; 255
 49e:	16 c0       	rjmp	.+44     	; 0x4cc <__floatsisf+0x6c>
 4a0:	88 23       	and	r24, r24
 4a2:	11 f0       	breq	.+4      	; 0x4a8 <__floatsisf+0x48>
 4a4:	96 e9       	ldi	r25, 0x96	; 150
 4a6:	11 c0       	rjmp	.+34     	; 0x4ca <__floatsisf+0x6a>
 4a8:	77 23       	and	r23, r23
 4aa:	21 f0       	breq	.+8      	; 0x4b4 <__floatsisf+0x54>
 4ac:	9e e8       	ldi	r25, 0x8E	; 142
 4ae:	87 2f       	mov	r24, r23
 4b0:	76 2f       	mov	r23, r22
 4b2:	05 c0       	rjmp	.+10     	; 0x4be <__floatsisf+0x5e>
 4b4:	66 23       	and	r22, r22
 4b6:	71 f0       	breq	.+28     	; 0x4d4 <__floatsisf+0x74>
 4b8:	96 e8       	ldi	r25, 0x86	; 134
 4ba:	86 2f       	mov	r24, r22
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	2a f0       	brmi	.+10     	; 0x4cc <__floatsisf+0x6c>
 4c2:	9a 95       	dec	r25
 4c4:	66 0f       	add	r22, r22
 4c6:	77 1f       	adc	r23, r23
 4c8:	88 1f       	adc	r24, r24
 4ca:	da f7       	brpl	.-10     	; 0x4c2 <__floatsisf+0x62>
 4cc:	88 0f       	add	r24, r24
 4ce:	96 95       	lsr	r25
 4d0:	87 95       	ror	r24
 4d2:	97 f9       	bld	r25, 7
 4d4:	08 95       	ret

000004d6 <__fp_inf>:
 4d6:	97 f9       	bld	r25, 7
 4d8:	9f 67       	ori	r25, 0x7F	; 127
 4da:	80 e8       	ldi	r24, 0x80	; 128
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	60 e0       	ldi	r22, 0x00	; 0
 4e0:	08 95       	ret

000004e2 <__fp_nan>:
 4e2:	9f ef       	ldi	r25, 0xFF	; 255
 4e4:	80 ec       	ldi	r24, 0xC0	; 192
 4e6:	08 95       	ret

000004e8 <__fp_pscA>:
 4e8:	00 24       	eor	r0, r0
 4ea:	0a 94       	dec	r0
 4ec:	16 16       	cp	r1, r22
 4ee:	17 06       	cpc	r1, r23
 4f0:	18 06       	cpc	r1, r24
 4f2:	09 06       	cpc	r0, r25
 4f4:	08 95       	ret

000004f6 <__fp_pscB>:
 4f6:	00 24       	eor	r0, r0
 4f8:	0a 94       	dec	r0
 4fa:	12 16       	cp	r1, r18
 4fc:	13 06       	cpc	r1, r19
 4fe:	14 06       	cpc	r1, r20
 500:	05 06       	cpc	r0, r21
 502:	08 95       	ret

00000504 <__fp_round>:
 504:	09 2e       	mov	r0, r25
 506:	03 94       	inc	r0
 508:	00 0c       	add	r0, r0
 50a:	11 f4       	brne	.+4      	; 0x510 <__fp_round+0xc>
 50c:	88 23       	and	r24, r24
 50e:	52 f0       	brmi	.+20     	; 0x524 <__fp_round+0x20>
 510:	bb 0f       	add	r27, r27
 512:	40 f4       	brcc	.+16     	; 0x524 <__fp_round+0x20>
 514:	bf 2b       	or	r27, r31
 516:	11 f4       	brne	.+4      	; 0x51c <__fp_round+0x18>
 518:	60 ff       	sbrs	r22, 0
 51a:	04 c0       	rjmp	.+8      	; 0x524 <__fp_round+0x20>
 51c:	6f 5f       	subi	r22, 0xFF	; 255
 51e:	7f 4f       	sbci	r23, 0xFF	; 255
 520:	8f 4f       	sbci	r24, 0xFF	; 255
 522:	9f 4f       	sbci	r25, 0xFF	; 255
 524:	08 95       	ret

00000526 <__fp_split3>:
 526:	57 fd       	sbrc	r21, 7
 528:	90 58       	subi	r25, 0x80	; 128
 52a:	44 0f       	add	r20, r20
 52c:	55 1f       	adc	r21, r21
 52e:	59 f0       	breq	.+22     	; 0x546 <__fp_splitA+0x10>
 530:	5f 3f       	cpi	r21, 0xFF	; 255
 532:	71 f0       	breq	.+28     	; 0x550 <__fp_splitA+0x1a>
 534:	47 95       	ror	r20

00000536 <__fp_splitA>:
 536:	88 0f       	add	r24, r24
 538:	97 fb       	bst	r25, 7
 53a:	99 1f       	adc	r25, r25
 53c:	61 f0       	breq	.+24     	; 0x556 <__fp_splitA+0x20>
 53e:	9f 3f       	cpi	r25, 0xFF	; 255
 540:	79 f0       	breq	.+30     	; 0x560 <__fp_splitA+0x2a>
 542:	87 95       	ror	r24
 544:	08 95       	ret
 546:	12 16       	cp	r1, r18
 548:	13 06       	cpc	r1, r19
 54a:	14 06       	cpc	r1, r20
 54c:	55 1f       	adc	r21, r21
 54e:	f2 cf       	rjmp	.-28     	; 0x534 <__fp_split3+0xe>
 550:	46 95       	lsr	r20
 552:	f1 df       	rcall	.-30     	; 0x536 <__fp_splitA>
 554:	08 c0       	rjmp	.+16     	; 0x566 <__fp_splitA+0x30>
 556:	16 16       	cp	r1, r22
 558:	17 06       	cpc	r1, r23
 55a:	18 06       	cpc	r1, r24
 55c:	99 1f       	adc	r25, r25
 55e:	f1 cf       	rjmp	.-30     	; 0x542 <__fp_splitA+0xc>
 560:	86 95       	lsr	r24
 562:	71 05       	cpc	r23, r1
 564:	61 05       	cpc	r22, r1
 566:	08 94       	sec
 568:	08 95       	ret

0000056a <__fp_zero>:
 56a:	e8 94       	clt

0000056c <__fp_szero>:
 56c:	bb 27       	eor	r27, r27
 56e:	66 27       	eor	r22, r22
 570:	77 27       	eor	r23, r23
 572:	cb 01       	movw	r24, r22
 574:	97 f9       	bld	r25, 7
 576:	08 95       	ret

00000578 <_exit>:
 578:	f8 94       	cli

0000057a <__stop_program>:
 57a:	ff cf       	rjmp	.-2      	; 0x57a <__stop_program>
